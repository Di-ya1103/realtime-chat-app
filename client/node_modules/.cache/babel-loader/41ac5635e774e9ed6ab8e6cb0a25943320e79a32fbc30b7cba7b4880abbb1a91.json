{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diya\\\\Documents\\\\realtime-chat-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport ChatList from './components/ChatList';\nimport ChatWindow from './components/ChatWindow';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [onlineUsers, setOnlineUsers] = useState([]); // User objects\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Client connected:', socket.id);\n    });\n    socket.on('update:users', users => {\n      console.log('Received update:users:', users); // Debug\n      setOnlineUsers(users);\n    });\n    socket.on('receive:message', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('update:users');\n      socket.off('receive:message');\n      socket.disconnect();\n    };\n  }, []);\n  const handleLogin = async () => {\n    if (username.trim()) {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        const data = await response.json();\n        console.log('Login data:', data);\n        if (data.user) {\n          localStorage.setItem('userId', data.user._id);\n          localStorage.setItem('username', data.user.username);\n          socket.emit('user:connect', data.user);\n          setIsLoggedIn(true);\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n      }\n    }\n  };\n  const sendMessage = text => {\n    if (!text.trim() || !currentChat) return;\n    const msg = {\n      sender: localStorage.getItem('userId'),\n      receiver: currentChat._id,\n      text,\n      timestamp: new Date()\n    };\n    socket.emit('send:message', msg);\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatList, {\n      onlineUsers: onlineUsers,\n      currentChat: currentChat,\n      setCurrentChat: setCurrentChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      currentChat: currentChat,\n      messages: messages,\n      sendMessage: sendMessage,\n      username: localStorage.getItem('username')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1+efmjN+ZGjkwsPr6Toew5qVqeI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","ChatList","ChatWindow","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","isLoggedIn","setIsLoggedIn","onlineUsers","setOnlineUsers","currentChat","setCurrentChat","messages","setMessages","on","console","log","id","users","msg","prev","off","disconnect","handleLogin","trim","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","_id","emit","error","sendMessage","text","sender","getItem","receiver","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Diya/Documents/realtime-chat-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport ChatList from './components/ChatList';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport './styles.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [onlineUsers, setOnlineUsers] = useState([]); // User objects\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('Client connected:', socket.id);\r\n    });\r\n\r\n    socket.on('update:users', (users) => {\r\n      console.log('Received update:users:', users); // Debug\r\n      setOnlineUsers(users);\r\n    });\r\n\r\n    socket.on('receive:message', (msg) => {\r\n      setMessages((prev) => [...prev, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('update:users');\r\n      socket.off('receive:message');\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    if (username.trim()) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/auth/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ username }),\r\n        });\r\n        const data = await response.json();\r\n        console.log('Login data:', data);\r\n        if (data.user) {\r\n          localStorage.setItem('userId', data.user._id);\r\n          localStorage.setItem('username', data.user.username);\r\n          socket.emit('user:connect', data.user);\r\n          setIsLoggedIn(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = (text) => {\r\n    if (!text.trim() || !currentChat) return;\r\n    const msg = {\r\n      sender: localStorage.getItem('userId'),\r\n      receiver: currentChat._id,\r\n      text,\r\n      timestamp: new Date(),\r\n    };\r\n    socket.emit('send:message', msg);\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h1>Login</h1>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter username\"\r\n          />\r\n          <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <ChatList\r\n        onlineUsers={onlineUsers}\r\n        currentChat={currentChat}\r\n        setCurrentChat={setCurrentChat}\r\n      />\r\n      <ChatWindow\r\n        currentChat={currentChat}\r\n        messages={messages}\r\n        sendMessage={sendMessage}\r\n        username={localStorage.getItem('username')}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}